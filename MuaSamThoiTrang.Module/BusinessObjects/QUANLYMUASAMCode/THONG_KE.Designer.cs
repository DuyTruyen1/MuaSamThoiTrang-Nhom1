//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using MuaSamThoiTrang.Module.BusinessObjects.QUANLYMUASAMCode;
using DevExpress.ExpressApp;
using DevExpress.ExpressApp.DC;
using DevExpress.Persistent.Validation;
namespace MuaSamThoiTrang.Module.BusinessObjects.QUANLYMUASAM
{
    [System.ComponentModel.DisplayName("Thống kê")]
    [DefaultListViewOptions(MasterDetailMode.ListViewOnly, true, NewItemRowPosition.Top)]
    [DefaultProperty("MaTK")]

    public partial class THONG_KE : XPObject
    {
        string fMaTK;
        [XafDisplayName("Mã thống kê")]
        [RuleRequiredField("Yeucau MaTK", DefaultContexts.Save, "Phải có mã thống kê")]
        public string MaTK
        {
            get { return fMaTK; }
            set { SetPropertyValue<string>(nameof(MaTK), ref fMaTK, value); }
        }

        DateTime fNgayTK;
        [XafDisplayName("Ngày thống kê")]
        public DateTime NgayTK
        {
            get { return fNgayTK; }
            set { SetPropertyValue<DateTime>(nameof(NgayTK), ref fNgayTK, value); }
        }

        NHAN_VIEN fMaNV;
        [XafDisplayName("Nhân viên")]
        [Association(@"THONG_KEReferencesNHAN_VIEN")]
        public NHAN_VIEN MaNV
        { 
            get { return fMaNV; }
            set { SetPropertyValue<NHAN_VIEN>(nameof(MaNV), ref fMaNV, value); }
        }
        [Association(@"CT_DAT_HANGReferencesTHONG_KE")]
        public XPCollection<CT_DAT_HANG> CT_DAT_HANGs { get { return GetCollection<CT_DAT_HANG>(nameof(CT_DAT_HANGs)); } }
        [Association(@"DAT_HANGReferencesTHONG_KE")]

        public XPCollection<DAT_HANG> DAT_HANGs { get { return GetCollection<DAT_HANG>(nameof(DAT_HANGs)); } }

         int fSoDonHang;

        public int SoDonHang
        {
            get { return fSoDonHang; }
            set { SetPropertyValue<int>(nameof(SoDonHang), ref fSoDonHang, value); }
        }
        public void UpdateSoDonHang()
        {
            if (Session != null)
            {
                CriteriaOperator criteria = CriteriaOperator.Parse("MaTK == ?", MaTK);
                int count = (int)Session.Evaluate<DAT_HANG>(CriteriaOperator.Parse("Count()"), criteria);
                SoDonHang = count;
            }
        }
    }
}
